[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "{{ cookiecutter.project_version }}"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author_name }} {{ cookiecutter.author_email }}"]
license = "MIT"

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"

[tool.poetry.dev-dependencies]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
line_length = 80
profile = "black"

[tool.black]
line-length = 80

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.taskipy.tasks]
format = { cmd = "isort . && black .", help = "Fix all code formatting issues" }
format-check = { cmd = "isort . -c && black --check .", help = "Check code for any formatting issues" }
lint-check = { cmd = "flake8 && mypy .", help = "Check code for any lint issues" }
test = { cmd = "python -m pytest --cov", help = "Run all unit tests and produce coverage reports" }
test-ci = { cmd = "task test -m \"not no_ci\"", help = "Run all unit tests in CI and produce coverage reports" }

[tool.pytest.ini_options]
addopts = "-ra -v"
markers = [
    "no_ci: exclude tests from running in CI"
]
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = [
    "src"
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Cannot cover lines meant to be run in script mode
    'if __name__ == "__main__"'
]
